{% extends 'base.html.twig' %}

{% block title %}Edit Profile{% endblock %}

{% block body %}
<div class="world-wrapper">
  <div class="world-create-card">
    <h2 class="text-center mb-4 title-green">Edit Profile</h2>

    {{ form_start(form, {'attr': {'enctype': 'multipart/form-data'}}) }}

      <!-- Username -->
      <div class="mb-3">
        <label for="username" class="form-label fw-bold">Username</label>
        {{ form_widget(form.username, {'attr': {'class': 'input-field', 'placeholder': 'Enter your username'}}) }}
      </div>

      <!-- Email -->
      <div class="mb-3">
        <label for="email" class="form-label fw-bold">Email</label>
        {{ form_widget(form.email, {'attr': {'class': 'input-field', 'placeholder': 'Enter your email'}}) }}
      </div>

      <!-- Password -->
      <div class="mb-3">
        <label class="form-label fw-bold">New Password</label>
        {{ form_widget(form.plainPassword.first, {'attr': {'class': 'input-field', 'placeholder': 'Enter new password'}}) }}
      </div>

      <div class="mb-3">
        <label class="form-label fw-bold">Confirm Password</label>
        {{ form_widget(form.plainPassword.second, {'attr': {'class': 'input-field', 'placeholder': 'Confirm new password'}}) }}
      </div>

      <!-- Avatar grid -->
      <label class="mb-2 fw-bold">Select your avatar:</label>
      <div class="avatar-grid mb-3">
        {% for key, value in form.profileImage.vars.choices %}
          <label class="avatar-choice">
            <input type="radio"
                   name="{{ form.profileImage.vars.full_name }}"
                   value="{{ value.value }}"
                   {% if value.value == form.profileImage.vars.data or (form.profileImage.vars.data is empty and value.value == 'default.png') %}checked{% endif %}
                   style="display:none;">
            <img src="{{ asset('uploads/profile_images/' ~ value.value) }}"
                 alt="{{ key }}"
                 class="avatar-img {% if value.value == form.profileImage.vars.data or (form.profileImage.vars.data is empty and value.value == 'default.png') %}selected{% endif %}">
          </label>
        {% endfor %}
      </div>

      {{ form_row(form._token) }}

      <div class="text-center mt-4">
        <button type="submit" class="btn-green px-5 py-2 fw-bold">Save Changes</button>
      </div>

    {{ form_end(form, { 'render_rest': false }) }}
  </div>
</div>

<style>
/* ✅ Reprise du style world-create pour cohérence */
.world-wrapper {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color:rgb(37, 37, 37);
}

.world-create-card {
  width: 650px;
  background-color: #111;
  border-radius: 24px;
  padding: 3rem 2.5rem;
  box-shadow: 0 0 25px rgba(0, 0, 0, 0.6);
  transition: all 0.3s ease;
}

.world-create-card:hover {
  box-shadow: 0 0 35px rgba(62, 207, 90, 0.1);
}

.title-green {
  color: #3ecf5a;
  font-weight: 800;
  text-shadow: 0 0 8px rgba(62, 207, 90, 0.4);
}

/* --- Champs input alignés sur world.scss --- */
.input-field {
  width: 100%;
  background-color: #1a1a1a;
  color: #fff !important;
  border: 1px solid #2e2e2e;
  border-radius: 10px;
  padding: 12px 16px;
  font-size: 1rem;
  outline: none;
  transition: all 0.2s;
}

.input-field:focus {
  background-color: #151515;
  box-shadow: 0 0 6px #3ecf5a;
  border-color: #3ecf5a;
}

/* --- Avatars --- */
.avatar-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
  gap: 1rem;
  background-color: #111;
  padding: 1rem;
  border-radius: 16px;
  box-shadow: 0 0 18px rgba(0,0,0,0.4);
}

.avatar-choice {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #1a1a1a;
  border-radius: 12px;
  padding: 6px;
  transition: all 0.2s ease;
  cursor: pointer;
}

.avatar-choice:hover {
  background-color: #222;
  transform: scale(1.05);
  box-shadow: 0 0 8px rgba(62, 207, 90, 0.4);
}

.avatar-img {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid transparent;
  transition: all 0.3s ease;
}

.avatar-img.selected {
  border: 2px solid #3ecf5a;
  box-shadow: 0 0 10px rgba(62, 207, 90, 0.8);
  transform: scale(1.07);
}

.avatar-img:hover {
  transform: scale(1.1);
}

/* --- Bouton vert identique au World --- */
.btn-green {
  background-color: #3ecf5a;
  color: #ffffff;
  border: none;
  font-weight: 700;
  border-radius: 10px;
  padding: 12px 26px;
  cursor: pointer;
  font-size: 1rem;
  transition: 0.25s;
}

.btn-green:hover {
  background-color: #34b54f;
  box-shadow: 0 0 15px rgba(62, 207, 90, 0.7);
}
</style>

<script>
document.querySelectorAll('.avatar-choice').forEach(choice => {
  choice.addEventListener('click', () => {
    document.querySelectorAll('.avatar-img').forEach(img => img.classList.remove('selected'));
    choice.querySelector('.avatar-img').classList.add('selected');
  });
});
</script>
{% endblock %}
